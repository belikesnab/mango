networks:
  mango-network:
    driver: bridge

volumes:
  postgres-mango-data:
  redis-data:
  consul-data:
  kafka-data:

services:
  # Mango database service
  postgres-mango:
    image: postgres:latest
    # For apple silicon host. For other hosts, use linux/amd64
    platform: linux/arm64
    container_name: mango-database
    environment:
      POSTGRES_DB: mangodb
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-mango-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - mango-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {POSTGRES_USER} -d mangodb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mango database connection pooling service
  pgbouncer-mango:
    image: edoburu/pgbouncer:latest
    container_name: mango-pgbouncer
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-mango:5432/mangodb
      # Match password type with postgres database
      AUTH_TYPE: scram-sha-256
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 100
      DEFAULT_POOL_SIZE: 20
      MIN_POOL_SIZE: 5
      RESERVE_POOL_SIZE: 5
      RESERVE_POOL_TIMEOUT: 3
      MAX_DB_CONNECTIONS: 50
      MAX_USER_CONNECTIONS: 50
    ports:
      - "6432:5432"
    depends_on:
      postgres-mango:
        condition: service_healthy
    networks:
      - mango-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Message brokering
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    environment:
      # KRaft settings
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      
      # Listeners
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      
      # Cluster ID 
      CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      
      # Log settings
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      
      # Auto create topics
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
    
    tmpfs:  # for development
      - /tmp/kraft-combined-logs
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - mango-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Mango caching service
  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASS} --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - mango-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5


